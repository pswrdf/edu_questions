Далее приводятся темы, которые желательно знать. Но это не является строгой и универсальной программой развития. Область рекомендуемых знаний зависит от потребностей проекта.

git
  Создание веток, слияние, перемещение, схлопывание комитов, отмена коммита, удаление коммита, получение изменений, обновление изменений, отправка коммитов, 
      спрятать изменения, разрешение конфликтов, игнор файлов
  (merge, rebase, revert, squash, branch, fetch, push, pull, stash)
sql
  создание таблиц, выполнение селектов с группировкой и соединением таблиц, использование подзапросов

*** Темы специфичные для Java разработчиков ***
gradle
  таски, последовательность выполнения, зависимости, стадии выполнения и конфигурации, gradlew, поиск артефактов

java
https://github.com/enhorse/java-interview
  Соглашение по написанию кода
    https://www.oracle.com/technetwork/java/codeconventions-150003.pdf

ООП
    именование методов
    наследование
    инкапсуляция
    абстрактные методы и классы, интерфейсы
    переопределение и перегрузка
  библиотеки commons, guava, lombok
http://commons.apache.org/
https://guava.dev/
https://projectlombok.org/
  логирование
  лямбды и стримы
linux
  пройти уроки, например https://younglinux.info/linux

=== middle уровень ===
  принципы SOLID
  Принцип KISS
  Инверсия зависимостей
  регулярные выражения
Паттерны проектирования
https://www.tutorialspoint.com/design_pattern/decorator_pattern.htm
https://github.com/iluwatar/java-design-patterns/tree/master/mediator
https://tproger.ru/translations/design-patterns-simple-words-3/#32

Модели, подходы и практики процесса разработка (Каскадная разработка, Agile, Scrum, XP)
https://retromat.org/ru/

Spring
  https://habr.com/ru/post/350682/

Книги, рекомендованные к прочтению:
  Операционные системы. Танненбаум (Книга суперсложная, для тру ИТшников)
